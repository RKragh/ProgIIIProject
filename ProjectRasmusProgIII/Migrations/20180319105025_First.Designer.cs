// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using ProjectRasmusProgIII.Data;
using System;

namespace ProjectRasmusProgIII.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180319105025_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectRasmusProgIII.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerAddress")
                        .IsRequired();

                    b.Property<string>("CustomerCity")
                        .IsRequired();

                    b.Property<string>("CustomerCountry")
                        .IsRequired();

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CustomerPhone");

                    b.Property<int>("CustomerZipCode");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("ProjectRasmusProgIII.Models.OrderContent", b =>
                {
                    b.Property<int>("OrderContentId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("OrderContentPrice");

                    b.Property<int>("OrderContentQuantity");

                    b.Property<int>("ProductId");

                    b.Property<int>("ShopOrderId");

                    b.HasKey("OrderContentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShopOrderId");

                    b.ToTable("OrderContent");
                });

            modelBuilder.Entity("ProjectRasmusProgIII.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ProductCategory")
                        .IsRequired();

                    b.Property<string>("ProductImagePath")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ProductName")
                        .IsRequired();

                    b.Property<double>("ProductPrice");

                    b.HasKey("ProductId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ProjectRasmusProgIII.Models.ShopOrder", b =>
                {
                    b.Property<int>("ShopOrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("ShopOrderCreatedDate");

                    b.Property<double>("ShopOrderPrice");

                    b.HasKey("ShopOrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("ShopOrder");
                });

            modelBuilder.Entity("ProjectRasmusProgIII.Models.OrderContent", b =>
                {
                    b.HasOne("ProjectRasmusProgIII.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectRasmusProgIII.Models.ShopOrder", "ShopOrder")
                        .WithMany()
                        .HasForeignKey("ShopOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectRasmusProgIII.Models.ShopOrder", b =>
                {
                    b.HasOne("ProjectRasmusProgIII.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
